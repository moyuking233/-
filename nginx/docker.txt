#以安装nginx 1.18版本为例
docker pull nginx：1.18
mkdir -p /usr/local/nginx/{conf,html,logs,ssl}
docker run --name nginx -p 80:80 -d nginx：1.18 #此容器只用来生成配置文件，用完后就删
docker cp nginx:/etc/nginx/nginx.conf /usr/local/nginx/conf/ #通过docker cp 命令把容器的配置文件复制到之前创建的文件夹里
docker cp nginx:/etc/nginx/conf.d /usr/local/nginx/
docker rm nginx -f #强制删除刚才启动的nginx服务，如果不想的强制删除也可以docker stop nginx,docker rm nginx
#拿到的证书文件丢到对应文件夹
vim /usr/local/nginx/nginx.conf #修改配置文件

注释掉 #include       /etc/nginx/mime.types;
在http {}中添加以下内容
server {
        #SSL 访问端口号为 443
        listen 443 ssl;
        #填写绑定证书的域名
        server_name cloud.tencent.com;
        #证书文件名称 这里的位置是容器内的位置，挂载的时候-v要挂载到，如果失败多尝试几次路径，相对nginx的目录
        ssl_certificate dragondb.space_bundle.crt;
        #私钥文件名称
        ssl_certificate_key dragondb.space.key;
        ssl_session_timeout 5m;
        #请按照以下协议配置
        ssl_protocols TLSv1.2 TLSv1.3;
        #请按照以下套件配置，配置加密套件，写法遵循 openssl 标准。
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
        ssl_prefer_server_ciphers on;
        location / {
           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
           #以下是一些反向代理的配置，可选。
           proxy_set_header Host $host;
           proxy_pass http://xxx.com:8090/;
        }

    }

#保存好配置文件

docker run --name nginx -p 443:443 -p 80:80 -v /usr/local/nginx/logs:/var/log/nginx -v /usr/local/nginx/html:/usr/share/nginx/html -v /usr/local/nginx/conf/nginx.conf:/etc/nginx/nginx.conf -v /usr/local/nginx/conf.d:/etc/nginx/conf.d -v /usr/local/nginx/ssl:/etc/nginx/ssl/ -v /usr/local/nginx/conf/:/etc/nginx/  --privileged=true -d --restart=always nginx:1.18